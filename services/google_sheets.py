import os
import io
import base64
from datetime import datetime
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from typing import List, Optional, Tuple
from config.settings import settings
from models.incident import Incident

class GoogleSheetsService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets"""
    
    def __init__(self):
        self.spreadsheet_id = settings.GOOGLE_SHEETS_ID
        self.sheet_name = settings.SHEET_NAME
        self.service = self._authenticate()
        
    def _authenticate(self):
        """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Google Sheets API"""
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º credentials –∏–∑ —Ñ–∞–π–ª–∞
            if os.path.exists(settings.GOOGLE_CREDENTIALS_FILE):
                credentials = service_account.Credentials.from_service_account_file(
                    settings.GOOGLE_CREDENTIALS_FILE,
                    scopes=['https://www.googleapis.com/auth/spreadsheets']
                )
            else:
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
                # –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ credentials –∏–∑ env
                raise FileNotFoundError(f"–§–∞–π–ª {settings.GOOGLE_CREDENTIALS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            service = build('sheets', 'v4', credentials=credentials)
            return service
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google Sheets: {e}")
            raise
            
    def append_incident(self, incident: Incident) -> bool:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ü–∏–¥–µ–Ω—Ç –≤ —Ç–∞–±–ª–∏—Ü—É
        
        Args:
            incident: –û–±—ä–µ–∫—Ç –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
            
        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
            values = [incident.to_sheet_row()]
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω (A:L - –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏ –≤–∫–ª—é—á–∞—è —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è)
            range_name = f"{self.sheet_name}!A:L"
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            body = {
                'values': values
            }
            
            result = self.service.spreadsheets().values().append(
                spreadsheetId=self.spreadsheet_id,
                range=range_name,
                valueInputOption='USER_ENTERED',  # –ü–æ–∑–≤–æ–ª—è–µ—Ç Google Sheets –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                insertDataOption='INSERT_ROWS',   # –í—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                body=body
            ).execute()
            
            print(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {result.get('updates', {}).get('updatedCells')} —è—á–µ–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
            return True
            
        except HttpError as error:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ Google Sheets: {error}")
            return False
        except Exception as e:
            print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
            
    def get_all_incidents(self) -> Optional[List[List[str]]]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        
        Returns:
            –°–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            range_name = f"{self.sheet_name}!A:L"
            
            result = self.service.spreadsheets().values().get(
                spreadsheetId=self.spreadsheet_id,
                range=range_name
            ).execute()
            
            values = result.get('values', [])
            
            if not values:
                print('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.')
                return []
            
            return values[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            
        except HttpError as error:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–∑ Google Sheets: {error}")
            return None
    
    def update_incident_photo(self, incident_id: str, photo_url: str) -> bool:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ URL –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
        
        Args:
            incident_id: ID –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
            photo_url: URL —Ñ–æ—Ç–æ –≤ Google Drive
            
        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã
            incidents = self.get_all_incidents()
            
            if not incidents:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
                return False
            
            # –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–π –ø–æ ID
            for i, incident_row in enumerate(incidents):
                if len(incident_row) > 0 and incident_row[0] == incident_id:
                    row_number = i + 2  # +2 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 1 –∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ç–æ URL (–∫–æ–ª–æ–Ω–∫–∞ K)
                    range_photo = f"{self.sheet_name}!K{row_number}"
                    self.service.spreadsheets().values().update(
                        spreadsheetId=self.spreadsheet_id,
                        range=range_photo,
                        valueInputOption='USER_ENTERED',
                        body={'values': [[photo_url]]}
                    ).execute()
                    
                    print(f"–§–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {incident_id}")
                    return True
            
            print(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
            return False
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ: {e}")
            return False
    
    def insert_image(self, file_data: bytes, incident_id: str, problem_description: str = "", file_extension: str = 'jpg') -> Tuple[bool, str]:
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –≤ Google Sheets
        
        Args:
            file_data: –î–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–∞–π—Ç–∞—Ö
            incident_id: ID –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
            problem_description: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            file_extension: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            
        Returns:
            Tuple[—É—Å–ø–µ—Ö, —Å–æ–æ–±—â–µ–Ω–∏–µ]
        """
        try:
            print(f"üì∏ –°–æ—Ö—Ä–∞–Ω—è—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {incident_id}...")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫: photos/incidents/YYYY/MM/DD/
            now = datetime.now()
            year = now.strftime('%Y')
            month = now.strftime('%m')
            day = now.strftime('%d')
            
            photos_dir = os.path.join('photos', 'incidents', year, month, day)
            os.makedirs(photos_dir, exist_ok=True)
            print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {photos_dir}")
            
            # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            if problem_description:
                clean_description = "".join(c for c in problem_description if c.isalnum() or c in ('-', '_', ' ')).strip()
                clean_description = clean_description.replace(' ', '_')
                if len(clean_description) > 30:
                    clean_description = clean_description[:30]
            else:
                clean_description = incident_id.replace('#', '').replace('-', '_')
            
            # –î–æ–±–∞–≤–ª—è–µ–º timestamp –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
            timestamp = now.strftime('%H%M%S')
            filename = f"{incident_id}_{clean_description}_{timestamp}.{file_extension}"
            
            # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            file_path = os.path.join(photos_dir, filename)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(file_path, 'wb') as f:
                f.write(file_data)
            
            print(f"üíæ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")
            
            # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞—à–∏–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–º
            incidents = self.get_all_incidents()
            if not incidents:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
                return False, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤"
            
            target_row = None
            for i, incident_row in enumerate(incidents):
                if len(incident_row) > 0 and incident_row[0] == incident_id:
                    target_row = i + 2  # +2 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 1 –∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    break
            
            if not target_row:
                print(f"‚ùå –ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
                return False, f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ"
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (K)
            image_column = 'K'
            cell_range = f"{self.sheet_name}!{image_column}{target_row}"
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
            image_text = f"üì∏ –§–æ—Ç–æ: {file_path}"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —è—á–µ–π–∫—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ñ–æ—Ç–æ
            self.service.spreadsheets().values().update(
                spreadsheetId=self.spreadsheet_id,
                range=cell_range,
                valueInputOption='USER_ENTERED',
                body={'values': [[image_text]]}
            ).execute()
            
            print(f"‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —è—á–µ–π–∫—É {cell_range}")
            return True, f"–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}"
            
        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}"
            print(f"‚ùå {error_msg}")
            return False, error_msg
    
    def update_incident_with_image(self, incident: dict) -> bool:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ü–∏–¥–µ–Ω—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ Google Sheets
        
        Args:
            incident: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
            
        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            print(f"üîÑ –û–±–Ω–æ–≤–ª—è—é –∏–Ω—Ü–∏–¥–µ–Ω—Ç {incident['id']} —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º...")
            
            # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–º
            incidents = self.get_all_incidents()
            if not incidents:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
                return False
            
            target_row = None
            for i, incident_row in enumerate(incidents):
                if len(incident_row) > 0 and incident_row[0] == incident['id']:
                    target_row = i + 2  # +2 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 1 –∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    break
            
            if not target_row:
                print(f"‚ùå –ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident['id']} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
                return False
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å (–Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—É—Ç–∏ –∫ —Ñ–æ—Ç–æ)
            incident_obj = Incident(**incident)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–ª–æ–Ω–∫—É J (—Å—Ç–∞—Ç—É—Å)
            status_range = f"{self.sheet_name}!J{target_row}"
            self.service.spreadsheets().values().update(
                spreadsheetId=self.spreadsheet_id,
                range=status_range,
                valueInputOption='USER_ENTERED',
                body={'values': [[settings.INCIDENT_STATUSES[incident_obj.status]]]}
            ).execute()
            
            print(f"‚úÖ –ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident['id']} –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Google Sheets")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: {e}")
            return False
    
    def insert_solution_image(self, file_data: bytes, incident_id: str, solution_description: str = "", file_extension: str = 'jpg') -> Tuple[bool, str]:
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –≤ Google Sheets
        
        Args:
            file_data: –î–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–∞–π—Ç–∞—Ö
            incident_id: ID –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
            solution_description: –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
            file_extension: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            
        Returns:
            Tuple[—É—Å–ø–µ—Ö, —Å–æ–æ–±—â–µ–Ω–∏–µ]
        """
        try:
            print(f"üì∏ –°–æ—Ö—Ä–∞–Ω—è—é —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {incident_id}...")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫: photos/solutions/YYYY/MM/DD/
            now = datetime.now()
            year = now.strftime('%Y')
            month = now.strftime('%m')
            day = now.strftime('%d')
            
            photos_dir = os.path.join('photos', 'solutions', year, month, day)
            os.makedirs(photos_dir, exist_ok=True)
            print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {photos_dir}")
            
            # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            if solution_description:
                clean_description = "".join(c for c in solution_description if c.isalnum() or c in ('-', '_', ' ')).strip()
                clean_description = clean_description.replace(' ', '_')
                if len(clean_description) > 30:
                    clean_description = clean_description[:30]
            else:
                clean_description = "solution"
            
            # –î–æ–±–∞–≤–ª—è–µ–º timestamp –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
            timestamp = now.strftime('%H%M%S')
            filename = f"{incident_id}_SOLUTION_{clean_description}_{timestamp}.{file_extension}"
            
            # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            file_path = os.path.join(photos_dir, filename)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(file_path, 'wb') as f:
                f.write(file_data)
            
            print(f"üíæ –§–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")
            
            # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞—à–∏–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–º
            incidents = self.get_all_incidents()
            if not incidents:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
                return False, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤"
            
            target_row = None
            for i, incident_row in enumerate(incidents):
                if len(incident_row) > 0 and incident_row[0] == incident_id:
                    target_row = i + 2  # +2 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 1 –∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    break
            
            if not target_row:
                print(f"‚ùå –ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
                return False, f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {incident_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ"
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è (L)
            solution_column = 'L'
            cell_range = f"{self.sheet_name}!{solution_column}{target_row}"
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª —Ä–µ—à–µ–Ω–∏—è
            solution_text = f"‚úÖ –†–µ—à–µ–Ω–∏–µ: {file_path}"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —è—á–µ–π–∫—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è
            self.service.spreadsheets().values().update(
                spreadsheetId=self.spreadsheet_id,
                range=cell_range,
                valueInputOption='USER_ENTERED',
                body={'values': [[solution_text]]}
            ).execute()
            
            print(f"‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —è—á–µ–π–∫—É {cell_range}")
            return True, f"–§–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}"
            
        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ —Ä–µ—à–µ–Ω–∏—è: {e}"
            print(f"‚ùå {error_msg}")
            return False, error_msg